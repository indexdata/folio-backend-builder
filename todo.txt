- Find order of tasks in folio-ansible, apply the same order
  - modules deployed first 
  - then bootstrap admin user: 
     https://github.com/folio-org/folio-ansible/blob/master/roles/mod-auth-data/tasks/main.yml
    with
     https://github.com/folio-org/folio-ansible/blob/master/roles/mod-auth-data/defaults/main.yml

  - draft pg options:  {
                         "host": "localhost", 
                         "port": 5432, 
                         "username": "folio_admin", 
                         "password": "folio_admin",
                         "database": "okapi_modules"
                        };


    Create 'folio_admin' postgres user: create-pg-superuser-folio-admin.sh

    First mod-permissions: it needs to pick up permissions from subsequent module deployments. 

    mod-permissions: git pull --recurse-submodules
                     mvn clean install
                       (info: schema: 'diku_mod_permissions')
                    create proxy  
                     curl -w '\n' -D - -s -X POST -H "Content-type: application/json" -d @../mod-permissions/target/ModuleDescriptor.json http://localhost:9130/_/proxy/modules
                    deploy (no deployment descriptor in target/):
                     curl -w '\n' -D - -s -X POST -H "Content-type: application/json" -d @deployment-descriptors/DeploymentDescriptor-mod-permissions-5.0.1-SNAPSHOT.json http://localhost:9130/_/discovery/modules
                    Assign to diku: ./assign-modules/assign-mod-permissions-to-diku.sh 
                      (check schema 'diku_mod_permissions')

    mod-users:      git pull --recurse-submodules
                    mvn clean install
                    create proxy  ../mod-users/target/ModuleDescriptor.json:
                      curl -w '\n' -D - -s -X POST -H "Content-type: application/json" -d @../mod-users/target/ModuleDescriptor.json http://localhost:9130/_/proxy/modules

                    create modified deployment descriptor: the one in target/ says 'embed_postgres'
                      schema should be 'diku_mod_users' (does not go in descriptor)
                      look at deployment descriptor in black box (they are docker based, but the db config should work)
                      curl -w '\n' -D - -s -X POST -H "Content-type: application/json" -d @deployment-descriptors/DeploymentDescriptor-mod-users-14.2.2-SNAPSHOT.json http://localhost:9130/_/discovery/modules
                    Assign to diku:  ./assign-modules/assing-mod-users-to-diku.sh


    mod-login:      git pull --recurse-submodules
                    mvn clean install
                    create proxy:
                      curl -w '\n' -D - -s -X POST -H "Content-type: application/json" -d @../mod-login/target/ModuleDescriptor.json http://localhost:9130/_/proxy/modules
                    deploy (no deployment descriptor in target/:
                      curl -w '\n' -D - -s -X POST -H "Content-type: application/json" -d @deployment-descriptors/DeploymentDescriptor-mod-login-4.0.1-SNAPSHOT.json http://localhost:9130/_/discovery/modules
                    Assign to diku: 
                      ./assign-modules/assign-mod-login-to-diku.sh 
                       (info: schema: should be 'diku_mod_login')

    mod-authtoken:  git pull --recurse-submodules
                    mvn clean install
                    create proxy: 
                      curl -w '\n' -D - -s -X POST -H "Content-type: application/json" -d @../mod-authtoken/target/ModuleDescriptor.json http://localhost:9130/_/proxy/modules

                    deploy (no deployment descriptor in target/):
                      curl -w '\n' -D - -s -X POST -H "Content-type: application/json" -d @deployment-descriptors/DeploymentDescriptor-mod-authtoken-1.0.1-SNAPSHOT.json http://localhost:9130/_/discovery/modules

                    Assign to diku: 
                      ./assign-modules/assign-mod-users-to-diku.sh 


                      Question: does it have a database (probably not, no schema found)

    mod-users-bl    git pull --recurse-submodules
                    mvn clean install
                    create proxy: 
                      curl -w '\n' -D - -s -X POST -H "Content-type: application/json" -d @../mod-users-bl/target/ModuleDescriptor.json http://localhost:9130/_/proxy/modules
                    deploy:
                      curl -w '\n' -D - -s -X POST -H "Content-type: application/json" -d @deployment-descriptors/DeploymentDescriptor-mod-users-bl-2.1.1-SNAPSHOT.json http://localhost:9130/_/discovery/modules
                    Assign to diku: 
                      ./assign-modules/assign-mod-users-bl-to-diku.sh 







